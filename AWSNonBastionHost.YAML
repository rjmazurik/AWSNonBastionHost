AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
          - Key: "Deprovision"
            Value: "AWSNonBastionHost"
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    DependsOn: VPC
    Properties: 
      Tags:
          - Key: "Deprovision"
            Value: "AWSNonBastionHost"
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 192.168.0.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs ] # Selects the first AvailabilityZone in the list
      Tags:
          - Key: "Deprovision"
            Value: "AWSNonBastionHost"
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
          - Key: "Deprovision"
            Value: "AWSNonBastionHost"
  DefaultPublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn: InternetGatewayAttachment
    Properties:
      ImageId: ami-0528a5175983e7f28
      AvailabilityZone: !Select [ 0, !GetAZs ] # Selects the first AvailabilityZone in the list
      InstanceType: t2.micro
      KeyName: cca-linux-key-pair
      NetworkInterfaces: 
        - SubnetId: !Ref PublicSubnet
          DeviceIndex: '0'
          GroupSet: 
            - !Ref VPCSecurityGroup
      Tags:
          - Key: "Deprovision"
            Value: "AWSNonBastionHost" 
  VPCSecurityGroup: 
    Type: AWS::EC2::SecurityGroup
    Properties: 
        GroupDescription: "Allow SSH from any IP address" 
        VpcId: !Ref VPC
        SecurityGroupIngress: 
        - IpProtocol: tcp 
          FromPort: 22
          ToPort: 22 
          CidrIp: 0.0.0.0/0
        Tags:
          - Key: "Deprovision"
            Value: "AWSNonBastionHost"
Outputs:
  PublicDnsName:
    Description: EC2 Public DNS Name 
    Value: !GetAtt EC2Instance.PublicDnsName
  PublicIp:
    Description: EC2 Public IP 
    Value: !GetAtt EC2Instance.PublicIp
  
        
